date()
date
date()
help(date)
Sys.Date()
Sys.Date()
help(date)
help(date)
format(Sys.time(), "%a %b %d %H:%M:%S %Y")
format(Sys.time(), "%a %b %d %Y")
format(date(), "%a %b %d %Y")
format(date(), "%a %m %d %Y")
format(date())
format(date(),)
format(date(), "")
visitCount <- read.delim("~/google_analytics/analytics_script/visitCount.txt")
View(visitCount)
visitCount$date <- as.Date(as.character(visitCount$date), '%Y%m%d')
min(visitCount$date)
max(visitCount$date)
diff(max(visitCount$date),max(visitCount$date))
diff(max(visitCount$date), max(visitCount$date))
diff(max(visitCount$date), min(visitCount$date))
diff
diff(visitCount$date)
diff(c(max(visitCount$date), min(visitCount$date)))
diff(c(min(visitCount$date), max(visitCount$date)))
help(diff)
as.POSIXct(max(visitCount$date)) - as.POSIXct(min(visitCount$date))
as.numeric(diff(c(min(visitCount$date), max(visitCount$date))))
library(ggplot2)
labs()
getwd()
library(ggplot2)
library(gridExtra)
visitCount <- read.delim("visitCount.txt", header=T)
visitCount$date <- as.Date(as.character(visitCount$date), '%Y%m%d')
min(visitCount$date)
### Timeline of daily game page visits
```{r fig.width=7, fig.height=6}
ggplot(data=visitCount, aes(x=as.Date(as.character(date), '%Y%m%d'), y=log10(visits), group=1)) + geom_point() + ggtitle("Distribution of daily game page visits") + labs(x=Number of Visits (log10), y = NULL)
library(ggplot2)
library(gridExtra)
visitCount <- read.delim("visitCount.txt", header=T)
visitCount$date <- as.Date(as.character(visitCount$date), '%Y%m%d')
```
Duration of the data displayed: ## `r min(visitCount$date)` to `r max(visitCount$date)`
visitCount <- read.delim("visitCount.txt", header=T)
dates <- as.Date(as.character(visitCount$date))
install.packages("maps")
install.packages("mapdata")
library(maps)
library(mapdata)
mpa("world")
map("world")
map("world", col="gray90", fill=TURE)
map("world", col="gray90", fill=TRUE)
map("world", xlim=c(-141,-53), ylim=c(40,85), col="gray90", fill=TRUE)
map("world", col="gray90", fill=TRUE)
install.packages("RgoogleMaps")
install.packages("ggmap")
library(ggmap)
map <- get_map(location= 'world')
visitsCountry <- read.delim("~/google_analytics/analytics_script/visitsCountry.txt")
View(visitsCountry)
help(ggmap)
install.packages("plotGoogleMaps")
library(plotGoogleMaps)
data(meuse)
head(meuse)
head(meuse)
m <- plotGoogleMaps(meuse, filename='myMap1.htm')
geocode
help(geocode)
geocode('India')
a <- geocode('India')
a
a <- geocode('india')
a
all <- geocode(visitsCountry$country)
all <- geocode(c(visitsCountry$country)
)
a$lon
all <- geocode(visitsCountry$country[1])
visitsCountry$country[1]
visitsCountry$country
visitsCountry[,1]
visitsCountry
visitsCountry$country[130]
as.character(visitsCountry$country[130])
all <- geocode(as.character(visitsCountry$country))
all
geocode(as.character(visitsCountry$country[130]))
data <- visitsCountry
data2 <- cbind(data, all)
head(data)
head(data2)
data3 <- transform(visitsCountry, geocode(as.character(visitsCountry$country)))
head(data3)
head(data3)
head(visitsCountry)
head(data2)
head(data)
map <- get_map(location= 'world')
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=data2)
ggmap(map) + geom_point(aes(x=data$lon, y=data2$lat, size=data2$visits), data=data2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
head(data2)
map <- get_map(location= 'world', zoom =4)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2, alpha =.5)
map <- get_map(location= 'world', zoom =1)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2, alpha =.5)
map <- get_map(location= 'world', zoom =2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2, alpha =.5)
map <- get_map(location= 'world', zoom = 1)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits), data=data2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
map <- get_map(location= 'world', maptype ='terrain', zoom = 3)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
map <- get_map(location= 'world', maptype ='roadmap', zoom = 1)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
map <- get_map(location= 'world', maptype ='watercolor', zoom = 1, source="osm")
map <- get_map(location= 'world', scale=606250, source="osm")
map <- get_map(location= 'world', source="osm")
map <- get_map(source="osm")
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
worldmap <- map_data("world")
ggmap(worldmap) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
ggplot(world, aes(x=data2$lon, y=data2$lat, size=log10(data2$visits))) + geom_point()
ggplot(worldmap, aes(x=data2$lon, y=data2$lat, size=log10(data2$visits))) + geom_point()
map <- get_map(location= 'world', zoom=1, scale=4)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log10(data2$visits)), data=data2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=log2(data2$visits)), data=data2)
ggmap(map) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
map
clear
ls
ls()
library(RgoogleMaps)
require(foreign)
world <- qmap(location='world', zoom=2) + themeset(theme_bw())
world <- qmap(location='world', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='world', zoom = 1, source="stamen", maptype="watercolor")
world <- qmap(location='world', zoom = 1, source="osm")
world <- qmap(location='world', zoom=1) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
View(visitsCountry)
View(visitsCountry)
world <- qmap(location='world', center= 'United Kingdom', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='world',  zoom = 1, source = "stamen", maptype = "toner")
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='world',  zoom = 2, source = "stamen", maptype = "toner")
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='world',  zoom = 2, source = "stamen", maptype = "watercolor")
gecode("United Kingdom")
geocode("United Kingdom")
world <- qmap(location='world', center= c(lon= -3.435973, lat=55.37805), zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
install.packages("rworldmap")
library(rworldmap)
mapDevice()
data(countryExData)
head(countryExData)
country2Region(visitsCountry, nameDataColumn="visits")
country2Region(visitsCountry, nameDataColumn="visits", regionType="Stern")
plot(getMap(resolution="coarse"))
world=getMap(resolution="coarse")
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
ggplot(world) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
install.packages("rworldxtra")
world=getMap(resolution="high")
ggplot(world) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
plot(getMap(resolution="high"))
mapCountryData(mapToPlot=visitsCountry, nameColumnToPlot=visitsCountry$visits)
head(countryExData)
help(joinCountryData2Map)
spdf <- joinCountryData2Map(visitsCountry, joinCode="NAMA", nameCountryColumn="country")
spdf <- joinCountryData2Map(visitsCountry, joinCode="NAME", nameCountryColumn="country")
spdf <- joinCountryData2Map(visitsCountry, joinCode="NAME", nameJoinColumn="country")
mapCountryData(spdf, nameColumnToPlot="visits")
spdf <- joinCountryData2Map(visitsCountry, joinCode="NAME", nameJoinColumn="country", nameCountryColumn= "country")
spdf <- joinCountryData2Map(visitsCountry, joinCode="NAME", nameJoinColumn="country", nameCountryColumn= "country", verbose=TRUE)
head(spdf)
world=getMap(resolution="high")
ggplot(world) + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
mapBubbles(df=getMap(), nameZSize=visitsCountry$visits, nameZColour=visitsCountry$country)
mapBubbles(df=getMap(), nameZSize=visitsCountry$visits)
savehistory("~/google_analytics/analytics_script/geocode_rcode_hsitory.Rhistory")
View(visitsCountry)
world <- qmap(location='world', center= 'United States', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='United States', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='United States', zoom=3) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='North America', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='North America', zoom=3) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='South America', zoom=3) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location= 'world', centre='United States', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
world <- qmap(location='world', center= c(lon=0, lat=0), zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=data2$lon, y=data2$lat, size=data2$visits), data=data2)
visitsCountry <- read.delim("~/google_analytics/analytics_script/visitsCountry.txt")
View(visitsCountry)
countrydata <- visitsCountry[which(visitsCountry$visits < 2000),]
head(countrydata)
library(ggmap)
Type(countrydata)
typeof(countrydata)
cbind(countrydata, gecode(as.character(countrydata$country)))
cbind(countrydata, geocode(as.character(countrydata$country)))
countrydata <- cbind(countrydata, geocode(as.character(countrydata$country)))
head(countrydata)
world <- qmap(location='world', center= 'United States', zoom=2) + theme_set(theme_bw())
world + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
world <- qmap(location='United States', zoom=3) + theme_set(theme_bw())
world + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
world <- qmap(location='South America', zoom=3) + theme_set(theme_bw())
world + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
world <- qmap(location='world', zoom=1) + theme_set(theme_bw())
world + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
library(maps)
library(mapdata)
map("world", xlim=c(-141,200), ylim=c(-50,85))
points(countrydata$lon, countrydata$lat, cex=countrydata$visits)
points(countrydata$lon, countrydata$lat, pch=20, cex=countrydata$visits)
help(map)
world <- map("world", xlim=c(-141,200), ylim=c(-50,85))
world + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(world) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
library(rworldmap)
plot(getMap(resolution="high"))
points(countrydata$lon, countrydata$lat, pch=20, cex=countrydata$visits)
points(countrydata$lon, countrydata$lat, pch=2, cex=countrydata$visits)
points(countrydata$lon, countrydata$lat, cex=countrydata$visits)
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, cex=countrydata$visits)
points(countrydata$lon, countrydata$lat, pch=0.1, cex=countrydata$visits)
points(countrydata$lon, countrydata$lat, cex=log10(countrydata$visits))
points(countrydata$lon, countrydata$lat, cex=log10(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, cex=log10(countrydata$visits))
points(countrydata$lon, countrydata$lat, pch=20, cex=log10(countrydata$visits))
points(countrydata$lon, countrydata$lat, pch=20, cex=log2(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=20, cex=log2(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=2, cex=log2(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=2, cex=log10(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=19, cex=log10(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=19, cex=log(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=19, cex=log10(countrydata$visits)/2)
points(countrydata$lon, countrydata$lat, cex=log10(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, cex=log10(countrydata$visits))
world <- map(xlim=c(-141,200), ylim=c(-50,85), resolution=0)
points(countrydata$lon, countrydata$lat, pch=19, cex=log10(countrydata$visits))
savehistory("~/google_analytics/analytics_script/geocode_rcode_hsitory.Rhistory")
map.world <- map_data(map="world")
ggplot(map.world, aes(x=lon, y=lat, group=visits, data=countrydata))
ggplot(map.world) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world)
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat)) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat))
ggplot(map.world, aes(x = long, y = lat)) geom_polygon() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat)) + geom_polygon() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat)) + geom_polygon()
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path()
geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path() + geom_point(countrydata, aes(x=lon, y=lat, size=visits))
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path()
ggplot(map.world, aes(x = long, y = lat)) + geom_path()
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_polygon() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path()
ggplot(map.world, aes(x = long, y = lat, group = group)) + geom_path() + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
help(qmap)
qmap(location= "United Kingdom", zoom = 1)
get_map(location= "United Kingdom", zoom = 1)
ggmap(get_map(location= 'world', source="osm"))
ggmap(get_map(location= 'world', zoom=1))
map <- get_map(location= 'world', zoom=1)
ggmap(map)
ggplot(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= 'world', zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
help(get_map)
map <- get_map(location= c(lon = c(-141,200), lat=c(-50,85)), zoom=1)
map <- get_map(location= c(lon = 0, lat= 0), zoom=1)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= c(lon = 0, lat= 0), zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= c(lon = -75, lat= 0), zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= c(lon = 75, lat= 0), zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
savehistory("~/google_analytics/analytics_script/geocode_rcode_hsitory.Rhistory")
library(ggmap)
visitsCountry <- read.delim("~/google_analytics/analytics_script/visitsCountry.txt")
countrydata <- visitsCountry[which(visitsCountry$visits < 2000),]
countrydata <- cbind(countrydata, geocode(as.character(countrydata$country)))
map <- get_map(location= c(lon = -85, lat= 25), zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= c(lon = 85, lat= 25), zoom=2)
ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
library(gridExtra)
map <- get_map(location= c(lon = -85, lat= 25), zoom=2)
plot1 <- ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
map <- get_map(location= c(lon = 85, lat= 25), zoom=2)
plot2 <- ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits), data=countrydata)
grid.arrange(plot1, plot2, ncol=2)
map <- get_map(location= c(lon = -85, lat= 25), zoom=2)
map2 <- get_map(location= c(lon = 85, lat= 25), zoom=2)
plot1 <- ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits, colour = visits), data=countrydata)
plot2 <- ggmap(map2) + geom_point(aes(x=lon, y=lat, size=visits, colour = visits), data=countrydata)
grid.arrange(plot1, plot2, ncol=2)
plot1 <- ggmap(map) + geom_point(aes(x=lon, y=lat, size=visits, colour = visits), data=countrydata) + scale_colour_gradient(low = "red")
plot2 <- ggmap(map2) + geom_point(aes(x=lon, y=lat, size=visits, colour = visits), data=countrydata) + scale_colour_gradient(low = "red")
grid.arrange(plot1, plot2, ncol=2)
savehistory("~/google_analytics/geocode_rcode_hsitory.Rhistory")
q()
setwd("~/ashdieback_sql_data/All_Launch_data_analysis_20140206/user_play_stats/user_gameplay_progress")
library(ggplot2)
users_progress_report <- read.delim("~/ashdieback_sql_data/All_Launch_data_analysis_20140206/user_play_stats/user_gameplay_progress/users_progress_report.txt")
View(users_progress_report)
days <- users_progress_report$NoofDays
range(days)
breaks = seq(0,20, by=1)
breaks
breaks[20]
breaks[21]
breaks[22] <- 50
breaks[23] <- 100
breaks[24] <- 200
breaks
dayscut <- cut(days, breaks, right=FALSE)
daysfreq <- table(dayscut)
daysfreq
days.freq <- cbind(daysfreq)
days.freq
cumfreq <- c(0, cumsum(days.freq))
plot(breaks, cumfreq)
days.freq[1]
days.freq[1:5]
days.freq[1:5,]
dayspercentfreq <- days.freq
dayspercentfreq
dayspercentfreq[]
dayspercentfreq[1:24]
dayspercentfreq[1:23]
dayspercentfreq[1:23] <- (days.freq[1:23]*100)/sum(days.freq[1:23])
dayspercentfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
plot(breaks, cumfreq)
savehistory("~/ashdieback_sql_data/All_Launch_data_analysis_20140206/user_play_stats/user_gameplay_progress/CumulativeFrequency.Rhistory")
tasks <- users_progress_report$TotalTasks
range(tasks)
breaks <- seq(0,25, by=1)
tasks.cut <- cut(tasks, breaks, right=FALSE)
tasks.cut
tasks.freq <- table(tasks.cut)
tasks.freq
tasks_freq <- cbind(tasks.freq)
tasks_freq
sum(users_progress_report$TotalTasks)
sum(daysfreq[1:23])
length(users_progress_report$TotalTasks)
taskspercentfreq <- tasks_freq
length(taskspercentfreq)
taskspercentfreq[1:26]
taskspercentfreq[1:25]
taskspercentfreq <- (tasks_freq[1:25]*100)/sum(daysfreq[1:23])
cumfreq <- c(0, cumsum(taskspercentfreq))
plot(breaks, cumfreq)
cumfreq
days <- users_progress_report$NoofDays
breaks = seq(0,20, by=1)
dayscut <- cut(days, breaks, right=FALSE)
daysfreq <- table(dayscut)
days.freq <- cbind(daysfreq)
dayspercentfreq[1:20] <- (days.freq[1:23]*100)/24822
dayspercentfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
plot(breaks, cumfreq)
days.freq[1:21]
days <- users_progress_report$NoofDays
breaks = seq(0,20, by=1)
dayscut <- cut(days, breaks, right=FALSE)
daysfreq <- table(dayscut)
days.freq <- cbind(daysfreq)
dayspercentfreq[1:20] <- (days.freq[1:20]*100)/24822
dayspercentfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
plot(breaks, cumfreq)
dayspercentfreq[1:20]
dayspercentfreq[1:21]
dayspercentfreq[1:22]
dayspercentfreq[1:23]
dayspercentfreq[1:24]
days <- users_progress_report$NoofDays
breaks = seq(0,20, by=1)
dayscut <- cut(days, breaks, right=FALSE)
daysfreq <- table(dayscut)
days.freq <- cbind(daysfreq)
dayspercentfreq[1:20] <- (days.freq[1:20]*100)/24822
dayspercentfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
plot(breaks, cumfreq)
days.freq
days.freq[1:22]
days.freq[1:20]
days.freq[1:21]
days <- users_progress_report$NoofDays
breaks = seq(0,20, by=1)
dayscut <- cut(days, breaks, right=FALSE)
daysfreq <- table(dayscut)
days.freq <- cbind(daysfreq)
dayspercentfreq <- days.freq
dayspercentfreq[1:20] <- (days.freq[1:20]*100)/24822
dayspercentfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
plot(breaks, cumfreq)
cumfreq
cumfreq <- c(1, cumsum(dayspercentfreq))
cumfreq
cumfreq <- c(0, cumsum(dayspercentfreq))
breaks = seq(-1,20, by=1)
plot(breaks, cumfreq)
breaks = seq(-1,19, by=1)
plot(breaks, cumfreq)
help(table)
library(ggplot2)
ggplot(users_progress_report, aes(NoofDays)) + stat_ecdf()
ggplot(users_progress_report, aes(NoofDays, TotalTasks)) + stat_ecdf()
ggplot(users_progress_report, aes(TotalTasks)) + stat_ecdf()
savehistory("~/ashdieback_sql_data/All_Launch_data_analysis_20140206/user_play_stats/user_gameplay_progress/CumulativeFrequency.Rhistory")

q()
a <- c(1,2,1,1,1,3,1,2,3,3)
str(a)
b <- hist(a, plot=FALSE)
str(b)
b
b$counts[1]
b <- hist(a)
users_progress_report <- read.delim("~/ashdieback_sql_data/All_Launch_data_analysis_20140206/user_play_stats/user_gameplay_progress/users_progress_report.txt")
View(users_progress_report)
count(users_progress_report$NoofDays)
help(count)
??count
help(grep)
help(find)
sum(users_progress_report$NoofDays =1)
subset(users_progress_report$NoofDays = 1)
subset(users_progress_report$NoofDays == 1)
subset(users_progress_report$NoofDays == 1,)
subset(users_progress_report, users_progress_report$NoofDays == 1)
length(subset(users_progress_report, users_progress_report$NoofDays == 1))
nrwo(subset(users_progress_report, users_progress_report$NoofDays == 1))
nrow(subset(users_progress_report, users_progress_report$NoofDays == 1))
nrow(subset(users_progress_report, users_progress_report$NoofDays == 0))
nrow(subset(users_progress_report, users_progress_report$NoofDays < 6))
nrow(users_progress_report)
24298*100/24822
nrow(subset(users_progress_report, users_progress_report$TotalTasks < 6))
21290*100/sum(users_progress_report$TotalTasks)
sum(subset(users_progress_report, users_progress_report$TotalTasks < 6)$TotalTasks)
30617*100/sum(users_progress_report$TotalTasks)
sum(subset(users_progress_report, users_progress_report$NoofDays < 6)$TotalTasks)
74683*100/sum(users_progress_report$TotalTasks)
sum(subset(users_progress_report, users_progress_report$NoofDays < 3)$TotalTasks)
nrow(subset(users_progress_report, users_progress_report$NoofDays < 3))
22756*100/24822
47798*100/sum(users_progress_report$TotalTasks)


